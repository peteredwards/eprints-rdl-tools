#!/usr/bin/perl
# Checks for orphan eprint docs in EP back-end storage and AK appliance
# This utility uses EPrints as the content list provider (not the file system)
# If eprintID is supplied it will provide detailed output for single eprint
# If no eprintID is supplied (just a repoID) it will iterate all LIVE eprints
# and notify of missing files on either EP back-end or AK appliance

use warnings;
use strict;
use File::Basename;
use Getopt::Long;

use FindBin;
use lib "$FindBin::Bin/../perl_lib";
use EPrints;

my $dryrun = 0;
Getopt::Long::Configure( 'bundling' );
GetOptions (
	'dryrun|listonly|l' => \$dryrun,
);

die "Usage:\n\t" . basename($0) . " <repo_id> [<eprint_id>]\n" if ! $ARGV[0];

my $repo_id = $ARGV[0];
my $eprintid = 0;

my $start = time;
print 'START: ' . `date`;

# connect to repository
my $repo = new EPrints::Session( 1 , $repo_id , 1 );
if( !defined $repo )
{
	print STDERR "Failed to load repository: $repo_id\n";
	exit 1;
}

my $ep_base = "/usr/share/eprints/archives/$repo_id/documents/disk0/";
my $ak_base = "/mnt/arkivum/$repo_id/documents/disk0/";

$eprintid = $ARGV[1] if $ARGV[1];

if ( $eprintid )
{
	my $ep_obj = EPrints::DataObj::EPrint->new( $repo, $eprintid );
	if ( ! defined $ep_obj )
	{
		die "EprintID $eprintid not found\n";
	}
	else
	{
		my $ep_archived = $ep_obj->is_set('archive_status');
		print "Not yet archivedi [ignoring]: " . $ep_obj->id . "\n" if ! $ep_archived;
		my @docs = $ep_obj->get_all_documents;
		foreach my $doc ( @docs )
		{
			my $local_path = $doc->local_path;
			$local_path =~ s/$ep_base//g;
			my @files = @{$doc->get_value( 'files' )};
			
			foreach my $file ( @files )
			{
				my $filename = $file->get_value( 'filename' );
				my $filepath = "$local_path/$filename";
				if ( ! -f "$ak_base$filepath" )
				{
					if ( -f "$ep_base$filepath" )
					{
						if ( $ep_archived )
						{
                                                        if ( $dryrun )
                                                        {
                                                                print "[dryrun] Would have copied $ep_base$filepath\n";
                                                        }
                                                        else
                                                        {
                                                                print "Copying $ep_base$filepath\n";
								my $ak_folder = dirname( "$ak_base$filepath" );
								system( "mkdir -p $ak_folder" );
								if ( -d $ak_folder )
								{
									system( "cp $ep_base$filepath $ak_base$filepath" );
								}
								else
								{
									print "ERROR: Cannot create folder $ak_folder\n";
								}
                                                        }
						}
						else
						{
							print "Ignoring $ep_base$filepath\n";
						}
					}
					else
					{
						print "ERROR: Cannot find $ep_base$filepath\n";
					}
				}
			}
		}
	}
}
else
{
	my $tsize;
	my $totaldocs;
	my @ep_missing;
	my @ak_missing;
	
	# get archive virtual dataset (i.e. only live eprints)
	my $ds = $repo->dataset( 'archive' ) ;
	if( !defined $ds )
	{
		print STDERR "Unknown Dataset ID: archive\n";
		$repo->terminate;
		exit 1;
	}
	my $list = $ds->search;
	#my $n = $list->count;
	my @eprints = $list->slice;

	foreach my $eprint ( @eprints )
	{
		my @docs = $eprint->get_all_documents;
		my $ep_archived = $eprint->is_set('archive_status');
		print "Not yet archivedi [ignoring]: " . $eprint->id . "\n" if ! $ep_archived;
		foreach my $doc ( @docs )
		{
			my $local_path = $doc->local_path;
			$local_path =~ s/$ep_base//g;
			my %files = $doc->files;
			foreach my $filename ( keys %files )
			{
				my $filepath = "$local_path/$filename";
                                if ( ! -f "$ak_base$filepath" )
                                {
                                        if ( -f "$ep_base$filepath" )
                                        {
                                                if ( $ep_archived )
                                                {
                                                        if ( $dryrun )
							{
								print "[dryrun] Would have copied $ep_base$filepath\n";
							}
							else
							{
								print "Copying $ep_base$filepath\n";
								my $ak_folder = dirname( "$ak_base$filepath" );
								system( "mkdir -p $ak_folder" );
								if ( -d $ak_folder )
								{
									system( "cp $ep_base$filepath $ak_base$filepath" );
								}
								else
								{
									print "ERROR: Cannot create folder $ak_folder\n";
								}
							}
                                                }
                                                else
                                                {
                                                        print "Ignoring $ep_base$filepath\n";
                                                }
                                        }
                                        else
                                        {
                                                print "ERROR: Cannot find $ep_base$filepath\n";
                                        }
                                }
			}
		}
	}
}

$repo->terminate;

my $duration = time - $start;
print "DURATION: $duration secs\n";
print 'END: ' . `date`;

exit;
